{"version":3,"sources":["Pokemon.js","Search.js","Sort.js","App.js","index.js"],"names":["Pokemon","filtered","counter","className","map","pokemon","index","key","href","url","name","Search","searchPokemon","useState","query","setQuery","console","log","onKeyUpCapture","e","type","value","onChange","target","placeholder","Sort","sort","sortType","sorted","setSorted","checked","App","pokemons","setPokemons","setFiltered","display","setDisplay","setSortType","count","setCount","api","setApi","displayPokemon","a","b","filter","includes","onClick","length","renderSort","fetch","then","response","json","results","catch","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9a84e909.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\n\nfunction Pokemon({ filtered, counter }) {\n  const renderPokemon = () => {\n    return filtered.map((pokemon, index) => {\n      return (\n        <li key={index}>\n          <a href={pokemon.url}>{pokemon.name}</a>\n        </li>\n      );\n    });\n  };\n\n  return (\n    <Fragment>\n      <h2>pokemon list </h2>\n      <ul className='text-center list-unstyled'>{renderPokemon()}</ul>\n    </Fragment>\n  );\n}\n\nexport default Pokemon;\n","import React, { useState } from 'react';\n\nconst Search = ({ searchPokemon }) => {\n  const [query, setQuery] = useState('');\n  console.log('SEARCH query:', query);\n\n  const handleSubmit = e => {\n    searchPokemon(query);\n  };\n\n  return (\n    <form onKeyUpCapture={handleSubmit} className='my-3 align-center'>\n      <input\n        type='text'\n        value={query}\n        onChange={e => setQuery(e.target.value)}\n        placeholder=\"Search for a pokemon...\"\n      />\n    </form>\n  );\n};\n\nexport default Search;\n","import React, { useState } from 'react';\n\nconst Sort = ({ sort, sortType }) => {\n  const [sorted, setSorted] = useState(false);\n\n  const handleToggle = () => {\n    if (sorted) {\n      sort('asc');\n    } else {\n      sort('desc');\n    }\n    setSorted(!sorted);\n  };\n\n  return (\n    <div className='flex'>\n      <label className='mr-3 mt-2'>Current order: {sortType}</label>\n      <input checked={sorted} onChange={handleToggle} type='checkbox' />\n    </div>\n  );\n};\n\nexport default Sort;\n","import React, { useState } from 'react';\nimport Pokemon from './Pokemon';\nimport Search from './Search';\nimport Sort from './Sort';\n\nfunction App() {\n  const [pokemons, setPokemons] = useState([]); // placeholder for pokemons\n  const [filtered, setFiltered] = useState([]); // Filter when querying for a pokemon\n  const [display, setDisplay] = useState(false); // Shows/Hides pokemon list\n  const [sortType, setSortType] = useState('asc'); // Sort by alphabetical order\n  const [count, setCount] = useState(0); // Counts fetch API to see if there're any leaks on API calls (There's none :)\n  const [api, setApi] = useState(false); // Calls API once with button\n\n  // Fetches pokemon (I can put this in a custom hook)\n  const fetchPokemons = () => {\n    fetch(`https://pokeapi.co/api/v2/pokemon?offset=0&limit=150`)\n      .then(response => response.json())\n      .then(json => {\n        setPokemons(json.results);\n        setFiltered(json.results);\n        setCount(count + 1);\n        setApi(true);\n        console.log('API call count:', count);\n      })\n      .catch(e => console.error(e));\n  };\n\n  // Shows/Hide pokemon list\n  const displayPokemon = () => {\n    setDisplay(!display);\n  };\n\n  // Search - Queries through pokemon and shows relavent pokemons\n  const searchPokemon = query => {\n    if (query !== '') {\n      let filtered = pokemons.filter(pokemon => pokemon.name.includes(query));\n      setFiltered(filtered);\n    } else if (query === '') {\n      setFiltered(pokemons);\n    }\n  };\n\n  // Sort alphabetically - ( helper function )\n  const sort = sortType => {\n    if (sortType === 'asc') {\n      setPokemons(\n        pokemons.sort((a, b) => {\n          if (a.name < b.name) {\n            return -1;\n          }\n          if (a.name > b.name) {\n            return 1;\n          }\n          return 0;\n        })\n      );\n      setFiltered(\n        filtered.sort((a, b) => {\n          if (a.name < b.name) {\n            return -1;\n          }\n          if (a.name > b.name) {\n            return 1;\n          }\n          return 0;\n        })\n      );\n      setSortType('asc');\n    } else if (sortType === 'desc') {\n      setPokemons(\n        pokemons.sort((a, b) => {\n          if (a.name > b.name) {\n            return -1;\n          }\n          if (a.name < b.name) {\n            return 1;\n          }\n          return 0;\n        })\n      );\n      setFiltered(\n        filtered.sort((a, b) => {\n          if (a.name > b.name) {\n            return -1;\n          }\n          if (a.name < b.name) {\n            return 1;\n          }\n          return 0;\n        })\n      );\n      setSortType('desc');\n    }\n  };\n\n  // Renders Pokemon in alphabetical order (UI)\n  const renderSort = () => {\n    if (pokemons.length > 0) {\n      return <Sort sort={sort} sortType={sortType} />;\n    }\n  };\n\n  // Renders pokemon (Can be refactored)\n  const renderPokemons = () => {\n    if (sortType === 'asc') {\n      return <Pokemon filtered={filtered} />;\n    } else if (sortType === 'desc') {\n      return <Pokemon filtered={filtered} />;\n    }\n  };\n\n  return (\n    <div className='container py-5 text-center'>\n      <h1>Pokedex</h1>\n      <p className='lead'>\n        Welcome ladies and gentleman! Search and sort through your Pokedex using\n        this web application.{' '}\n      </p>\n      <p>\n        If you'd like to learn more about the pokemon; click the pokemons name.\n      </p>\n      <Search searchPokemon={searchPokemon} />\n      {!api ? (\n        <div>\n          <button\n            onClick={() => {\n              fetchPokemons();\n              displayPokemon();\n            }}\n          >\n            Call API / Show Pokemons\n          </button>\n        </div>\n      ) : (\n        <div>\n          {display ? (\n            <div>\n              <button onClick={displayPokemon}>Hide Pokemons</button>\n              {renderSort()}\n              {renderPokemons()}\n            </div>\n          ) : (\n            <div>\n              <button\n                onClick={() => {\n                  displayPokemon();\n                }}\n              >\n                Show Pokemons\n              </button>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}